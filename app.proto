/**
   * Copyright (c) 2022 Peking University and Peking University Institute for Computing and Digital Economy
   * SCOW is licensed under Mulan PSL v2.
   * You can use this software according to the terms and conditions of the Mulan PSL v2.
   * You may obtain a copy of Mulan PSL v2 at:
   *          http://license.coscl.org.cn/MulanPSL2
   * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
   * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
   * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
   * See the Mulan PSL v2 for more details.
*/

syntax = "proto3";

package scheduler.adapter;

import "google/protobuf/timestamp.proto";
import "job.proto";

message CreateAppRequest {
  string app_id = 1;
  string user_id = 2;
  string account = 3;
  optional string partition = 4;
  optional string qos = 5;
  uint32 core_count = 6;
  uint32 max_time_minutes = 7;
  map<string, string> custom_attributes = 8;
}

message CreateAppResponse {
  string session_id = 1;
  int32 job_id = 2;
}

message ListAppSessionsRequest {
  string user_id = 1;
}

message AppSession {
  string session_id = 1;
  uint32 job_id = 2;
  google.protobuf.Timestamp submit_time = 3;
  string app_id = 4;
  JobState state = 5;
  bool ready = 6;
  string data_path = 7;
  
  // format in "days-hours:minutes:seconds"
  string running_time = 8;

  /*
    format in days-hours:minutes:seconds.
    The value may be "UNLIMITED" for no limit.
   */
  string time_limit = 9;
}

message ListAppSessionsResponse {
  repeated AppSession sessions=1;
}


// ? 创建交互式应用的个性化配置带有只适用于slurm的sbatch配置信息
service AppService {
   /*
    * description: create app(submit an app job)
    * errors: 
    * - app not exist
    *   NOT_FOUND, APP_NOT_FOUND, {}
    * - sbatch failed
    *   UNKNOWN, SBATCH_FAILED, {
    *     reason: string
    *   }
    * - ? sftp, ssh 是否应该定义这类错误
    */
   rpc CreateApp(CreateAppRequest) returns (CreateAppResponse);
   /*
    * description: list all app sessions
    * errors: 
    * - user not exist
    *   NOT_FOUND, USER_NOT_FOUND, {}
    */
   rpc ListAppSessions(ListAppSessionsRequest) returns (ListAppSessionsResponse);
}
